{"version":3,"sources":["modal.js","RegistrationForm.js","registerServiceWorker.js","index.js"],"names":["Modal","props","className","text","firstName","lastName","email","onClick","closeModal","RegistrationForm","handleChange","e","name","setState","target","value","checkData","rexExpMap","state","valid","password","touched","modalisOpen","bind","toggleModal","checkOnSubmit","regExp","stateName","stateValid","this","test","length","display","invalidStr","formFilled","formInvalid","Object","keys","some","x","prevState","errors","validate","shouldMarkError","field","hasError","shouldShow","placeholder","type","id","onChange","style","requiredStyle","errorMessages","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc46f2c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Modal(props)  {\r\n    return (\r\n      <div className='modal'>\r\n        <div className='modal-content'>\r\n          <div className=\"modal-title\">{props.text}</div>\r\n          <div>\r\n            <div className=\"modal-label\">\r\n              <div>Имя: </div>\r\n              <div className=\"modal-input-value\">{props.firstName}</div>\r\n            </div>\r\n            <div className=\"modal-label\">\r\n              <div>Фамилия: </div>\r\n              <div className=\"modal-input-value\">{props.lastName}</div>\r\n            </div>\r\n            <div className=\"modal-label\">\r\n              <div>Email: </div>\r\n              <div className=\"modal-input-value\">{props.email}</div>\r\n            </div>\r\n          </div>\r\n          <button className=\"modal-btn\" onClick={props.closeModal}>Close</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n};\r\n \r\nexport default Modal;\r\n  ","import React, { Component } from 'react';\r\nimport Modal from './modal';\r\nimport './RegistrationForm.css';\r\n\r\nclass RegistrationForm extends Component {\r\n  constructor(props){\r\n    super(props); \r\n   this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      password: '',\r\n      email: '',\r\n      valid: {\r\n        firstName: true,\r\n        lastName: true,\r\n        password: true,\r\n        email: true,\r\n      },\r\n      touched: {\r\n        firstName: false,\r\n        lastName: false,\r\n        password: false,\r\n        email: false\r\n      },\r\n      modalisOpen: false\r\n    };\r\n\r\n    this.rexExpMap = {\r\n      firstName: /^[a-zA-Zа-яА-ЯёЁ\\u00c4\\u00e4\\u00d6\\u00f6\\u00dc\\u00fc\\u00df]+$/,\r\n      lastName: /^[a-zA-Zа-яА-ЯёЁ\\u00c4\\u00e4\\u00d6\\u00f6\\u00dc\\u00fc\\u00df]+$/,\r\n      password: /^.{4,}$/,\r\n      email: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\r\n    }\r\n  \r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.checkData = this.checkData.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.checkOnSubmit = this.checkOnSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = (e, name) => {\r\n    this.setState({[e.target.name]: e.target.value}, () => {\r\n      this.checkData(this.rexExpMap[name], this.state[name], this.state.valid[name], name)\r\n    });\r\n  }\r\n  checkData(regExp, stateName, stateValid, name){\r\n    this.setState({\r\n      touched: { ...this.state.touched, [name]: true }\r\n    });\r\n   if(regExp.test(stateName)) {\r\n      this.setState({\r\n        valid: { ...this.state.valid, [name]: true }\r\n      });\r\n    } else {\r\n      this.setState({\r\n        valid: { ...this.state.valid, [name]: false }\r\n      });\r\n    }\r\n  }\r\n  validate(firstName, lastName, password, email) {  \r\n    return {\r\n      firstName: firstName.length === 0,\r\n      lastName: lastName.length === 0,\r\n      password: password.length === 0,\r\n      email: email.length === 0\r\n    };\r\n  }\r\n  requiredStyle(name) {\r\n    const show = (this.state[name] === \"\" || !this.state.valid[name]) && this.state.touched[name];\r\n    return {display: show ? 'block' : 'none'}\r\n  }\r\n  errorMessages(name) {\r\n    const requiredStr = 'This field is required.';\r\n    const invalidStr = 'Enter valid '+ name +'.';\r\n    return !this.state.valid[name] && this.state[name] !== \"\" ? invalidStr : requiredStr\r\n  }\r\n  checkOnSubmit() {\r\n    const {firstName, lastName, password, email } = this.state;    \r\n    const formFilled = !(firstName === '' || lastName === '' ||  password === '' || email === '');\r\n    const formInvalid = Object.keys(this.state.valid).some(x => !this.state.valid[x]);\r\n    const formHasErrors = !formFilled || formInvalid;\r\n\r\n    if (!formHasErrors) {\r\n      this.toggleModal();\r\n    }\r\n    this.setState({\r\n      touched: {\r\n        firstName: true,\r\n        lastName: true,\r\n        password: true,\r\n        email: true,\r\n      },\r\n    });\r\n  }\r\n  toggleModal(){\r\n    this.setState(prevState => ({\r\n      modalisOpen: !prevState.modalisOpen\r\n    }));\r\n  }\r\n  \r\n  render() {\r\n    const errors = this.validate(this.state.firstName, this.state.lastName, this.state.password, this.state.email);\r\n    const shouldMarkError = (field) => {\r\n      const hasError = errors[field];\r\n      const shouldShow = this.state.touched[field];\r\n      return hasError ? shouldShow : false;\r\n    }\r\n    const helpMessage = (name) =>{\r\n      return {display: shouldMarkError(name) ? 'none' : 'block'}\r\n    }\r\n    \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"register-form\" >\r\n          <div className=\"title\">Регистрация</div>\r\n          <div className=\"form\">\r\n            <div>\r\n              <label>\r\n                <input\r\n                  placeholder=\"Имя\"\r\n                  type=\"text\"\r\n                  value={this.state.firstName}\r\n                  name=\"firstName\" id=\"firstName\"\r\n                  className={shouldMarkError(\"firstName\") ? \"error\" : \"\"}\r\n                  onChange={(e) => this.handleChange(e, \"firstName\")} />\r\n              </label>\r\n              <span className=\"required-field\" style={this.requiredStyle('firstName')}>{this.errorMessages('firstName')}</span>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                \r\n                <input\r\n                  placeholder=\"Фамилия\"\r\n                  type=\"text\" \r\n                  value={this.state.lastName} \r\n                  name=\"lastName\" id=\"lastName\"\r\n                  className={shouldMarkError(\"lastName\") ? \"error\" : \"\"}\r\n                  onChange={(e) => this.handleChange(e, \"lastName\")} />\r\n              </label>\r\n              <span className=\"required-field\" style={this.requiredStyle('lastName')}>{this.errorMessages('lastName')}</span>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  className={shouldMarkError(\"email\") ? \"error\" : \"\"}\r\n                  onChange={(e) => this.handleChange(e, \"email\")} />\r\n              </label>\r\n              <span className=\"required-field\" style={this.requiredStyle('email')}>{this.errorMessages('email')}</span>\r\n            </div>\r\n\r\n            <div>\r\n              <label>\r\n                <input\r\n                  placeholder=\"Пароль\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  name=\"password\"\r\n                  className={shouldMarkError(\"password\") ? \"error\" : \"\"}\r\n                  onChange={(e) => this.handleChange(e, \"password\")} />\r\n              </label>\r\n              <span className=\"required-field\" style={this.requiredStyle('password')}>{this.errorMessages('password')}</span>\r\n            </div>\r\n           \r\n            <button className=\"sb-btn\" type=\"button\" onClick={this.checkOnSubmit}>Отправить</button>            \r\n          </div>\r\n        </div>\r\n        {this.state.modalisOpen? \r\n          <Modal\r\n            text='Ваши данные'\r\n            {...this.state}\r\n            closeModal={this.toggleModal}\r\n          />\r\n          : null\r\n        }\r\n      </div>\r\n    );\r\n  } \r\n  \r\n}\r\n\r\n\r\nexport default RegistrationForm;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n ReactDOM.render(<RegistrationForm />, document.getElementById('root'));\r\nregisterServiceWorker() "],"sourceRoot":""}